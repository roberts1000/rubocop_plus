# Blocks the use of Capybara style methods like `feature`, `scenario, `given`, etc... Allow the use of some of these methods.
# https://github.com/rubocop-hq/rubocop-rspec/blob/v1.37.1/lib/rubocop/cop/rspec/capybara/feature_methods.rb
Capybara/FeatureMethods:
  EnabledMethods:
    - feature
    - scenario

# Checks if the first element of a describe block is a class and if described_class is used in examples. Prefer the flexibility
# of using strings with `describe` and putting the described class directly in an example.
# https://github.com/rubocop-hq/rubocop-rspec/blob/v1.37.1/lib/rubocop/cop/rspec/described_class.rb
RSpec/DescribedClass:
  Enabled: false

# Checks the number of lines in the spec example. The default is 5, which frequently can be a bit tight.
# https://github.com/rubocop-hq/rubocop-rspec/blob/v1.37.1/lib/rubocop/cop/rspec/example_length.rb#L28
RSpec/ExampleLength:
  Max: 8

# Checks for the use of instance variables in specs. Prefer allowing instance variables ('let' should be used when possible).
# https://github.com/rubocop-hq/rubocop-rspec/blob/v1.37.1/lib/rubocop/cop/rspec/instance_variable.rb
RSpec/InstanceVariable:
  Enabled: false

# Checks for multiple expectations in a test. Prefer allowing any number of expecations.
# https://github.com/rubocop-hq/rubocop-rspec/blob/v1.37.1/lib/rubocop/cop/rspec/multiple_expectations.rb#L48
RSpec/MultipleExpectations:
  Enabled: false

# Checks for the use of not_to instead of to_not. Prefer to_not.
# https://github.com/rubocop-hq/rubocop-rspec/blob/v1.37.1/lib/rubocop/cop/rspec/not_to_not.rb
RSpec/NotToNot:
  EnforcedStyle: to_not
